---
- name: Provision Moodle web node (RDS/EFS, ansible-pull)
  hosts: localhost
  become: true
  gather_facts: yes

  vars:
    # 既存の group_vars を尊重しつつデフォルトだけ定義（不要な上書きはしません）
    moodle_wwwroot: "{{ moodle_wwwroot | default('/var/www/moodle') }}"
    moodle_datadir: "{{ moodle_datadir | default('/var/moodledata') }}"
    moodle_branch:  "{{ moodle_branch  | default('MOODLE_401_STABLE') }}"
    moodle_web_user:  "{{ moodle_web_user  | default('www-data') }}"
    moodle_web_group: "{{ moodle_web_group | default('www-data') }}"

  pre_tasks:
    - name: Ensure base packages (nginx, php, git, nfs)
      ansible.builtin.apt:
        update_cache: yes
        name:
          - git
          - nginx
          - unzip
          - nfs-common
          - php-fpm
          - php-cli
          - php-mysql
          - php-xml
          - php-mbstring
          - php-gd
          - php-intl
          - php-zip
          - php-curl
        state: present

    - name: Detect PHP minor version (8.x)
      ansible.builtin.command: php -r 'echo PHP_MAJOR_VERSION.".".PHP_MINOR_VERSION;'
      register: php_ver
      changed_when: false

    - name: Set php_minor/php_fpm_service facts
      ansible.builtin.set_fact:
        php_minor: "{{ php_ver.stdout | default('8.3') }}"
        php_fpm_service: "php{{ (php_ver.stdout | default('8.3')) }}-fpm"

    # 変数の自己参照ループ回避：ここで「実効のDBホスト」を決定
    - name: Resolve DB host (effective)
      ansible.builtin.set_fact:
        db_host_effective: >-
          {{ moodle_db_host
             | default(moodle_db_host_env
             | default(moodle_db_host_ssm
             | default(moodle_db_host_alt
             | default('')))) }}

    - name: Show resolved inputs (for troubleshooting only)
      ansible.builtin.debug:
        verbosity: 1
        msg:
          - "aws_region={{ aws_region | default('n/a') }}"
          - "php_minor={{ php_minor }}"
          - "moodle_db_host_env={{ moodle_db_host_env | default('') }}"
          - "moodle_db_host_ssm={{ moodle_db_host_ssm | default('') }}"
          - "moodle_db_host_alt={{ moodle_db_host_alt | default('') }}"
          - "db_host_effective={{ db_host_effective | default('') }}"

  tasks:
    - name: Ensure moodledata dir exists
      ansible.builtin.file:
        path: "{{ moodle_datadir }}"
        state: directory
        owner: "{{ moodle_web_user }}"
        group: "{{ moodle_web_group }}"
        mode: "0775"

    - name: Ensure EFS line in /etc/fstab
      ansible.builtin.lineinfile:
        path: /etc/fstab
        regexp: "^{{ moodle_efs_id }}.efs.{{ aws_region }}.amazonaws.com:/\\s+{{ moodle_datadir }}\\s+nfs4\\s"
        line: "{{ moodle_efs_id }}.efs.{{ aws_region }}.amazonaws.com:/ {{ moodle_datadir }} nfs4 defaults,_netdev 0 0"
        state: present
      when: moodle_efs_id is defined and moodle_efs_id|length > 0

    - name: Mount EFS (idempotent)
      ansible.posix.mount:
        path: "{{ moodle_datadir }}"
        src: "{{ moodle_efs_id }}.efs.{{ aws_region }}.amazonaws.com:/"
        fstype: nfs4
        opts: defaults,_netdev
        state: mounted
      when: moodle_efs_id is defined and moodle_efs_id|length > 0

    - name: Ensure dataroot ownership on EFS
      ansible.builtin.file:
        path: "{{ moodle_datadir }}"
        state: directory
        owner: "{{ moodle_web_user }}"
        group: "{{ moodle_web_group }}"
        mode: "02770"

    - name: Ensure common subdirs for Moodle dataroot
      ansible.builtin.file:
        path: "{{ moodle_datadir }}/{{ item }}"
        state: directory
        owner: "{{ moodle_web_user }}"
        group: "{{ moodle_web_group }}"
        mode: "02770"
      loop:
        - cache
        - localcache
        - sessions
        - temp
        - trashdir
        - filedir
        - lang

    - name: Ensure /var/www exists
      ansible.builtin.file:
        path: /var/www
        state: directory
        owner: "{{ moodle_web_user }}"
        group: "{{ moodle_web_group }}"
        mode: "0755"

    - name: Ensure Moodle dir exists and ownership
      ansible.builtin.file:
        path: "{{ moodle_wwwroot }}"
        state: directory
        owner: "{{ moodle_web_user }}"
        group: "{{ moodle_web_group }}"
        mode: "0755"

    # --- git の「dubious ownership」回避（system レベル） ---
    - name: Check system git safe.directory list
      ansible.builtin.command: git config --system --get-all safe.directory
      register: git_safedir_list
      changed_when: false
      failed_when: false

    - name: Add system-level safe.directory for Moodle
      ansible.builtin.command: git config --system --add safe.directory {{ moodle_wwwroot }}
      when: git_safedir_list.rc != 0 or (moodle_wwwroot not in git_safedir_list.stdout_lines)

    - name: Checkout Moodle from GitHub (as www-data)
      become: true
      become_user: "{{ moodle_web_user }}"
      ansible.builtin.git:
        repo: "https://github.com/moodle/moodle.git"
        dest: "{{ moodle_wwwroot }}"
        version: "{{ moodle_branch }}"
        update: yes
        force: yes
        accept_hostkey: yes

    - name: Ensure ownership/perm on Moodle dir (recursive)
      ansible.builtin.file:
        path: "{{ moodle_wwwroot }}"
        owner: "{{ moodle_web_user }}"
        group: "{{ moodle_web_group }}"
        mode: "0755"
        recurse: yes

    # --- テンプレート配置（src は "templates/" を付けない：重複検索を防止） ---
    - name: php.ini for Moodle (FPM)
      ansible.builtin.template:
        src: "php-moodle.ini.j2"
        dest: "/etc/php/{{ php_minor }}/fpm/conf.d/90-moodle.ini"
        owner: root
        group: root
        mode: "0644"
      notify: restart services

    - name: Nginx vhost for Moodle
      ansible.builtin.template:
        src: "nginx_moodle.conf.j2"
        dest: "/etc/nginx/sites-available/moodle.conf"
        owner: root
        group: root
        mode: "0644"
      notify: restart services

    - name: Enable vhost
      ansible.builtin.file:
        src: "/etc/nginx/sites-available/moodle.conf"
        dest: "/etc/nginx/sites-enabled/moodle.conf"
        state: link
      notify: restart services

    - name: Disable default vhost
      ansible.builtin.file:
        path: "/etc/nginx/sites-enabled/default"
        state: absent
      notify: restart services

    - name: Render config.php (RDS/EFS)
      ansible.builtin.template:
        src: "config.php.j2"
        dest: "{{ moodle_wwwroot }}/config.php"
        owner: "{{ moodle_web_user }}"
        group: "{{ moodle_web_group }}"
        mode: "0640"
      vars:
        dbhost:   "{{ db_host_effective }}"
        dbname:   "{{ moodle_db_name }}"
        dbuser:   "{{ moodle_db_user }}"
        dbpass:   "{{ moodle_db_password }}"
        dataroot: "{{ moodle_datadir }}"
        wwwroot:  "{{ moodle_siteurl | default('') }}"
      notify: restart services

  handlers:
    - name: Restart PHP-FPM
      listen: restart services
      ansible.builtin.service:
        name: "{{ php_fpm_service }}"
        state: restarted

    - name: Reload Nginx
      listen: restart services
      ansible.builtin.service:
        name: nginx
        state: reloaded