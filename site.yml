- name: Provision Moodle web node (RDS/EFS, ansible-pull)
  hosts: localhost
  connection: local
  become: true
  vars_files:
    - group_vars/all.yml

  pre_tasks:
    - name: Ensure base packages
      apt:
        name:
          - nginx
          - php-fpm
          - php-mysql
          - php-xml
          - php-gd
          - php-curl
          - php-zip
          - php-intl
          - php-mbstring
          - nfs-common
          - unzip
          - git
          - python3-boto3          # ← SSM/Secrets の lookup に必須
        state: present
        update_cache: true

    - name: Detect PHP minor version (8.x)
      shell: "php -r 'echo PHP_MAJOR_VERSION.\".\".PHP_MINOR_VERSION;'"
      register: php_ver
      changed_when: false
      failed_when: php_ver.stdout is not match('^8\\.')

    # EFS マウント準備
    - name: Ensure moodledata dir exists
      file:
        path: "{{ moodle_datadir }}"
        state: directory
        owner: "{{ moodle_web_user }}"
        group: "{{ moodle_web_group }}"
        mode: "0775"

    - name: Ensure EFS line in /etc/fstab
      lineinfile:
        path: /etc/fstab
        regexp: '^.+\.efs\.{{ aws_region }}\.amazonaws\.com:/\s+{{ moodle_datadir }}\s+'
        line: "{{ moodle_efs_id }}.efs.{{ aws_region }}.amazonaws.com:/ {{ moodle_datadir }} nfs4 defaults,_netdev 0 0"
        state: present

  tasks:
    - name: Mount EFS (idempotent)
      mount:
        path: "{{ moodle_datadir }}"
        src: "{{ moodle_efs_id }}.efs.{{ aws_region }}.amazonaws.com:/"
        fstype: nfs4
        opts: defaults,_netdev
        state: mounted

    # ← 追加：EFS をマウントした「後」にもう一度所有権/権限を適用
    - name: Ensure ownership/perm on mounted moodledata (EFS)
      file:
        path: "{{ moodle_datadir }}"
        state: directory
        owner: "{{ moodle_web_user }}"
        group: "{{ moodle_web_group }}"
        mode: "0775"

    - name: Checkout Moodle from GitHub
      git:
        repo: "https://github.com/moodle/moodle.git"
        dest: "{{ moodle_wwwroot }}"
        version: "{{ moodle_branch }}"
        force: yes
      notify: restart services

    - name: Ensure ownership/perm on Moodle dir
      file:
        path: "{{ moodle_wwwroot }}"
        state: directory
        owner: "{{ moodle_web_user }}"
        group: "{{ moodle_web_group }}"
        mode: "0755"
        recurse: true

    - name: php.ini for Moodle
      copy:
        dest: "/etc/php/{{ php_ver.stdout }}/fpm/conf.d/90-moodle.ini"
        mode: "0644"
        content: |
          post_max_size = 64M
          upload_max_filesize = 64M
          max_input_vars = 5000
      notify: restart services

    - name: Nginx vhost for Moodle
      template:
        src: roles/moodle/templates/nginx_moodle.conf.j2
        dest: /etc/nginx/sites-available/moodle.conf
        mode: "0644"
      notify: restart services

    - name: Enable vhost
      file:
        src: /etc/nginx/sites-available/moodle.conf
        dest: /etc/nginx/sites-enabled/moodle.conf
        state: link
      notify: restart services

    - name: Disable default vhost
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      notify: restart services

    - name: Render config.php (RDS/EFS)
      template:
        src: roles/moodle/templates/config.php.j2
        dest: "{{ moodle_wwwroot }}/config.php"
        owner: "{{ moodle_web_user }}"
        group: "{{ moodle_web_group }}"
        mode: "0640"
      notify: restart services

    # ← 追加：ALBヘルスチェック用の静的エンドポイント
    - name: Create static health check endpoint
      copy:
        dest: "{{ moodle_wwwroot }}/healthz.html"
        content: "ok\n"
        owner: "{{ moodle_web_user }}"
        group: "{{ moodle_web_group }}"
        mode: "0644"

    - name: Ensure Moodle cron (every minute)
      cron:
        name: "Moodle cron"
        user: "{{ moodle_web_user }}"
        minute: "*"
        job: "PHP_INI_SCAN_DIR=/etc/php/{{ php_ver.stdout }}/fpm/conf.d php {{ moodle_wwwroot }}/admin/cli/cron.php >/dev/null 2>&1"

  handlers:
    - name: restart services
      block:
        - name: Restart PHP-FPM
          service:
            name: "php{{ php_ver.stdout }}-fpm"
            state: restarted
            enabled: true
        - name: Reload Nginx
          service:
            name: nginx
            state: reloaded
            enabled: true
