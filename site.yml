---
- name: Provision Moodle web node (RDS/EFS, ansible-pull)
  hosts: localhost
  connection: local
  become: true
  gather_facts: yes

  vars_files:
    - group_vars/all.yml

  pre_tasks:
    - name: Detect PHP minor version (8.x)
      ansible.builtin.command: >
        php -r 'echo PHP_MAJOR_VERSION.".".PHP_MINOR_VERSION;'
      register: phpver
      changed_when: false
      failed_when: false

    - name: Set php_minor fact (fallback to 8.3)
      ansible.builtin.set_fact:
        php_minor: "{{ (phpver.stdout | default('', true)) | ternary(phpver.stdout, '8.3') }}"

    - name: Resolve DB host with precedence (-e > ENV > /moodle/db/host > /moodle/rds/endpoint)
      ansible.builtin.set_fact:
        moodle_db_host: >-
          {{
            (
              (moodle_db_host is defined and (moodle_db_host | length > 0) and moodle_db_host)
              or moodle_db_host_env
              or moodle_db_host_ssm
              or moodle_db_host_alt
            )
          }}

    - name: Show resolved inputs (for troubleshooting only)
      ansible.builtin.debug:
        verbosity: 1
        msg:
          aws_region: "{{ aws_region }}"
          php_minor: "{{ php_minor }}"
          moodle_siteurl: "{{ moodle_siteurl | default('') }}"
          moodle_db_host: "{{ moodle_db_host | default('') }}"
          moodle_db_name: "{{ moodle_db_name | default('') }}"
          moodle_db_user: "{{ moodle_db_user | default('') }}"
          moodle_efs_id: "{{ moodle_efs_id | default('') }}"

  tasks:
    - name: Ensure base packages
      ansible.builtin.apt:
        name:
          - git
          - nginx
          - nfs-common
          - php-fpm
          - php-cli
          - php-curl
          - php-gd
          - php-intl
          - php-mbstring
          - php-mysql
          - php-xml
          - php-zip
        state: present
        update_cache: yes
      notify: [restart php-fpm, restart nginx]

    - name: Ensure moodledata dir exists
      ansible.builtin.file:
        path: "{{ moodle_datadir }}"
        state: directory
        owner: "{{ moodle_web_user }}"
        group: "{{ moodle_web_group }}"
        mode: "0775"

    - name: Ensure EFS line in /etc/fstab
      ansible.builtin.lineinfile:
        path: /etc/fstab
        create: yes
        line: "{{ moodle_efs_id }}.efs.{{ aws_region }}.amazonaws.com:/ {{ moodle_datadir }} nfs4 defaults,_netdev 0 0"
        state: present
      when: moodle_efs_id | length > 0

    - name: Mount EFS (idempotent)
      ansible.posix.mount:
        path: "{{ moodle_datadir }}"
        src: "{{ moodle_efs_id }}.efs.{{ aws_region }}.amazonaws.com:/"
        fstype: nfs4
        opts: defaults,_netdev
        state: mounted
      when: moodle_efs_id | length > 0

    - name: Ensure dataroot ownership on EFS
      ansible.builtin.file:
        path: "{{ moodle_datadir }}"
        state: directory
        owner: "{{ moodle_web_user }}"
        group: "{{ moodle_web_group }}"
        mode: "02770"

    - name: Ensure common subdirs for Moodle dataroot
      ansible.builtin.file:
        path: "{{ moodle_datadir }}/{{ item }}"
        state: directory
        owner: "{{ moodle_web_user }}"
        group: "{{ moodle_web_group }}"
        mode: "02770"
      loop:
        - cache
        - localcache
        - sessions
        - temp
        - trashdir
        - filedir
        - lang

    - name: Checkout Moodle from GitHub
      ansible.builtin.git:
        repo: https://github.com/moodle/moodle.git
        dest: "{{ moodle_wwwroot }}"
        version: "{{ moodle_branch }}"
        update: yes
      notify: [restart php-fpm, restart nginx]

    - name: Ensure ownership/perm on Moodle dir
      ansible.builtin.file:
        path: "{{ moodle_wwwroot }}"
        state: directory
        owner: "{{ moodle_web_user }}"
        group: "{{ moodle_web_group }}"
        mode: "0755"
        recurse: yes

    - name: php.ini for Moodle
      ansible.builtin.template:
        src: templates/php-moodle.ini.j2
        dest: "/etc/php/{{ php_minor }}/fpm/conf.d/90-moodle.ini"
        owner: root
        group: root
        mode: "0644"
      notify: restart php-fpm

    - name: Nginx vhost for Moodle
      ansible.builtin.template:
        src: templates/nginx/moodle.conf.j2
        dest: /etc/nginx/sites-available/moodle.conf
        owner: root
        group: root
        mode: "0644"
      notify: restart nginx

    - name: Enable vhost
      ansible.builtin.file:
        src: /etc/nginx/sites-available/moodle.conf
        dest: /etc/nginx/sites-enabled/moodle.conf
        state: link
        force: yes
      notify: restart nginx

    - name: Disable default vhost
      ansible.builtin.file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      notify: restart nginx

    - name: Render config.php (RDS/EFS)
      ansible.builtin.template:
        src: roles/moodle/templates/config.php.j2
        dest: "{{ moodle_wwwroot }}/config.php"
        owner: "{{ moodle_web_user }}"
        group: "{{ moodle_web_group }}"
        mode: "0640"
      notify: [restart php-fpm, restart nginx]

    - name: Ensure Moodle cron (every minute)
      ansible.builtin.cron:
        name: "Moodle cron"
        user: "{{ moodle_web_user }}"
        minute: "*"
        job: "/usr/bin/php {{ moodle_wwwroot }}/admin/cli/cron.php > /dev/null 2>&1"

    - name: Warn when DB host is empty (non-fatal)
      ansible.builtin.debug:
        msg: "WARNING: moodle_db_host が未解決です。SSMや環境変数(MOODLE_DB_HOST)で渡してください。"
      when: (moodle_db_host | default('')) | length == 0

  handlers:
    - name: restart php-fpm
      ansible.builtin.service:
        name: "php{{ php_minor }}-fpm"
        state: started
        enabled: true

    - name: restart nginx
      ansible.builtin.service:
        name: nginx
        state: started
        enabled: true
